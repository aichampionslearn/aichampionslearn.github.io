{"config":{"lang":["en"],"separator":"[\\s\\-,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#welcome-to-aichampions-learn","title":"Welcome to AIChampions Learn !","text":"<p>Link to our homepage aichampionshub.com.</p>"},{"location":"#latest-code-news","title":"Latest Code / News","text":"<ul> <li>This is test</li> </ul>"},{"location":"#past-articles","title":"Past Articles","text":"<pre><code>mkdocs.yml    # The configuration file.\n</code></pre>"},{"location":"admonitions/","title":"Admonitions","text":"<p>Example of admonition</p> <p>Title of the Callout</p> <p>Sample Text Line 2 Line 3</p> <p>Collapsible callout:</p> Collapsible callout <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p>"},{"location":"admonitions/#diagram-examples","title":"Diagram Examples","text":""},{"location":"admonitions/#flowcharts","title":"Flowcharts","text":"<p>```mermaid graph LR   A[Start] --&gt; B{Failure?};   B --&gt;|Yes| C[Investigate...];   C --&gt; D[Debug];   D --&gt; B;   B ----&gt;|No| E[Success!];</p> <p>## Sequence Diagrams</p> <p>```mermaid sequenceDiagram   autonumber   Server-&gt;&gt;Terminal: Send request   loop Health       Terminal-&gt;&gt;Terminal: Check for health   end   Note right of Terminal: System online   Terminal--&gt;&gt;Server: Everything is OK   Terminal-&gt;&gt;Database: Request customer data   Database--&gt;&gt;Terminal: Customer data</p>"},{"location":"code-examples/","title":"Code Examples","text":"<p>For full documentation visit mkdocs.org.</p> add_numbers.py<pre><code># Function to add two numbers\ndef add_two_numbers(num1, num2):\n    return num1 + num2\n\n# Example usage\nresult = add_two_numbers(5, 3)\nprint('The sum is:', result)\n\n// Function to concatenate two strings\nfunction concatenateStrings(str1, str2) {\n  return str1 + str2;\n}\n\n// Example usage\nconst result = concatenateStrings(\"Hello, \", \"World!\");\nconsole.log(\"The concatenated string is:\", result);\n</code></pre>"},{"location":"content-tabs/","title":"Content tabs","text":""},{"location":"content-tabs/#content-tabs","title":"Content Tabs","text":"<p>This is some examples of Content Tabs.</p>"},{"location":"content-tabs/#generic-content","title":"Generic Content","text":"Plain textUnordered ListOrdered List <p>This is some plain text.</p> <ul> <li>First Item.</li> <li>Second Item</li> <li>Third Item</li> </ul> <ol> <li>First Item.</li> <li>Second Item</li> <li>Third Item</li> </ol>"},{"location":"content-tabs_New_Test/","title":"content tabs New Test","text":""},{"location":"content-tabs_New_Test/#new-content-tabs","title":"New Content Tabs","text":"<p>This is some examples of NEW Content Tabs.</p>"},{"location":"content-tabs_New_Test/#generic-content","title":"Generic Content","text":"Plain textUnordered ListOrdered List <p>This is some plain text.</p> <ul> <li>First Item.</li> <li>Second Item</li> <li>Third Item</li> </ul> <ol> <li>First Item.</li> <li>Second Item</li> <li>Third Item</li> </ol>"},{"location":"material-mkdocs-getting-started-2024/","title":"Getting Started with Material for MkDocs New !","text":"<p>Supporting blog post for my Material for MkDocs: Full Tutorial To Build And Deploy Your Docs Portal video on  YouTube.</p> <p></p>","tags":["YouTube","Material for MkDocs"]},{"location":"material-mkdocs-getting-started-2024/#introduction","title":"Introduction","text":"<p>Material for MkDocs is the ultimate framework for creating stunning, interactive documentation sites. In this tutorial, we\u2019ll be creating a new documentation portal completely from scratch, and then hosting that on the web for free using GitHub pages.</p> <p>Along the way, you'll learn just a handful of the awesome features that Material for MkDocs comes bundled with, such as:</p> <ul> <li>Setting a dynamic colour scheme</li> <li>Adding a splash of personality with emojis, icons and logos to make your content visually appealing</li> <li>How to create custom code blocks that adjust based on the programming language specified</li> <li>How to better organise your documentation using content tabs</li> <li>How to empathize parts of your content using admonitions - also known as callouts</li> <li>And how to bring your ideas to life with statically rendered diagrams directly in your docs</li> </ul> Tip <p>This is an in-depth tutorial. If this is your first time using Material for MkDocs then you're probably best to just follow it all through from the beginning.</p> <p>But if you've used Material for MkDocs before and just want to know about a certain feature, you can use the Table of contents on the right to jump around this guide at your leisure.</p> <p>Supporting GitHub Repository</p> <p>I've created a supporting GitHub repository for all the code examples featured in this tutorial</p>","tags":["YouTube","Material for MkDocs"]},{"location":"material-mkdocs-getting-started-2024/#mkdocs-vs-material-for-mkdocs","title":"'MkDocs' vs 'Material for MkDocs'","text":"<p>Before we begin the tutorial, let's quickly go over the differences between MkDocs and Material for MkDocs, as there is often some confusion.</p> <p>Plain MkDocs is a static site generator specifically designed for creating documentation websites. So by using MkDocs alone, you get a relatively vanilla and straightforward site for your documentation.</p> <p>On the other hand, Material for MkDocs is a theme built on top of MkDocs. It transforms your documentation site with a modern, responsive design inspired by Material Design principles. </p> <p>What's important to note is that this theme doesn't just change the look; it enhances functionality with built-in plugins that support features like:</p> <ul> <li>Blog posts </li> <li>Social cards</li> <li>Advanced search capabilities </li> <li>and lots more...</li> </ul> <p>Info</p> <p>So to summarise, MkDocs provides the core functionality of building a static site, while Material for MkDocs signficantly elevates the visual and interactive experience of your documentation.</p> <p>Now that we understand the differences, let's get to work on setting up our new Material for MkDocs portal.</p>","tags":["YouTube","Material for MkDocs"]},{"location":"material-mkdocs-getting-started-2024/#prerequisites","title":"Prerequisites","text":"<p>These are the prerequistes you\u2019ll need to have installed if you want to follow along with this tutorial:</p> <ul> <li> Python<ul> <li>pip - the Python package manager (included by default in Python 3.4 and later)</li> </ul> </li> <li> Visual Studio Code - or any other IDE of your choice</li> <li> GitHub Account - as we will deploy the site on GitHub pages</li> </ul>","tags":["YouTube","Material for MkDocs"]},{"location":"material-mkdocs-getting-started-2024/#initial-installation","title":"Initial Installation","text":"<ul> <li>Open a terminal in the folder that you want to create the project in</li> <li>Type <code>which python</code> or <code>which python3</code> to check Python is installed</li> </ul> To check Python location on  Windows <p>Type <code>where python</code> instead on the command prompt or Powershell terminal</p> <ul> <li>Setup a Python virtual environment by typing <code>python -m venv venv</code></li> <li>Type <code>source venv/bin/activate</code> to activate the virtual environment</li> </ul> To activate Python virtual environment on  Windows <p>Type <code>.\\venv\\Scripts\\activate</code> instead</p> <ul> <li>Check pip version <code>pip --version</code></li> <li>Install mkdocs material - <code>pip install mkdocs-material</code></li> <li>Open Visual studio code in this folder with <code>code .</code></li> <li>Open a terminal within Visual Studio code</li> <li>Activate the virtual environment on the new terminal with <code>source venv/bin/activate</code></li> <li>Create a new site <code>mkdocs new .</code></li> <li>Add the following basic <code>mkdocs.yml</code> configuration:</li> </ul> mkdocs.yml<pre><code>site_name: My MkDocs Material Documentation\nsite_url: https://sitename.example\ntheme:\n  name: material\n</code></pre> <ul> <li>Type <code>mkdocs serve</code> to launch the site</li> <li>Check the site at http://localhost:8000</li> </ul>","tags":["YouTube","Material for MkDocs"]},{"location":"material-mkdocs-getting-started-2024/#add-yaml-schema-validation","title":"Add Yaml Schema Validation","text":"<p>To activate most of the useful features in MkDocs Material, we need to make changes to the <code>mkdocs.yml</code> file. Making these changes is much easier with the help of YAML schema validation.</p> <ul> <li>Within the Extensions tab of Visual Studio Code, install the Red Hat VS Code Yaml extension.</li> <li>In VsCode open <code>settings.json</code>. </li> </ul> How to open <code>settings.json</code> in  Visual Studio Code <p>You can open <code>settings.json</code> by clicking the  gear icon in the bottom left, then clicking the  document icon in the top right.</p> <ul> <li>Add the following at the bottom of the <code>settings.json</code> file:</li> </ul> settings.json<pre><code>  \"yaml.schemas\": {\n    \"https://squidfunk.github.io/mkdocs-material/schema.json\": \"mkdocs.yml\"\n  },\n  \"yaml.customTags\": [\n    \"!ENV scalar\",\n    \"!ENV sequence\",\n    \"!relative scalar\",\n    \"tag:yaml.org,2002:python/name:material.extensions.emoji.to_svg\",\n    \"tag:yaml.org,2002:python/name:material.extensions.emoji.twemoji\",\n    \"tag:yaml.org,2002:python/name:pymdownx.superfences.fence_code_format\"\n  ]\n</code></pre> <p>Now when you mouse-over any of the entries in the <code>mkdocs.yml</code> file, you'll see a popup with more information about that entry. Any errors in the yaml file will also be highlighted.</p>","tags":["YouTube","Material for MkDocs"]},{"location":"material-mkdocs-getting-started-2024/#adjust-color-scheme","title":"Adjust Color Scheme","text":"<p>We can easily change the color scheme of our documentation.</p>","tags":["YouTube","Material for MkDocs"]},{"location":"material-mkdocs-getting-started-2024/#switch-to-dark-mode","title":"Switch to Dark Mode","text":"<p>Start by changing the color scheme to  dark. Add this to the <code>mkdocs.yml</code> file:</p> mkdocs.yml<pre><code>theme:\n  name: material\n  palette:\n    scheme: slate\n</code></pre>","tags":["YouTube","Material for MkDocs"]},{"location":"material-mkdocs-getting-started-2024/#primary-colour","title":"Primary Colour","text":"<p>Let's also change the primary colour in our documentation to  green by adding <code>primary: green</code> under the palette:</p> mkdocs.yml<pre><code>theme:\n  name: material\n  palette:\n    scheme: slate\n    primary: green\n</code></pre> <p>We can see that this makes the banner green, and also the hyperlinks green.</p>","tags":["YouTube","Material for MkDocs"]},{"location":"material-mkdocs-getting-started-2024/#accent-colour","title":"Accent Colour","text":"<p>Let's also change the accent colour to  <code>deep purple</code> :</p> mkdocs.yml<pre><code>theme:\n  name: material\n  palette:\n    scheme: slate\n    primary: green\n    accent: deep purple\n</code></pre> <p>Now when we hover over the links with the mouse, they turn purple.</p>","tags":["YouTube","Material for MkDocs"]},{"location":"material-mkdocs-getting-started-2024/#toggle-lightdark-modes","title":"Toggle Light/Dark Modes","text":"<p>We can also add a toggle to our site that allows the user to switch between  light and  dark modes. Add this to <code>palette</code> in the <code>mkdocs.yml</code> file to enable this:</p> mkdocs.yml<pre><code>theme:\n  name: material\n  palette:\n    # Dark Mode\n    - scheme: slate\n      toggle:\n        icon: material/weather-sunny\n        name: Dark mode\n      primary: green\n      accent: deep purple\n\n    # Light Mode\n    - scheme: default\n      toggle:\n        icon: material/weather-night\n        name: Light mode\n      primary: blue\n      accent: deep orange\n</code></pre> <p>There are lots of other configuration options available to you in Material for MkDocs if you want to adjust the colour, for example adding custom colours or automatically switching between light and dark mode based on the time of day.</p> <p>For more information, check the colors documentation page.</p>","tags":["YouTube","Material for MkDocs"]},{"location":"material-mkdocs-getting-started-2024/#adjust-font","title":"Adjust Font","text":"<p>Material for MkDocs supports any Google font directly out of the box.</p>","tags":["YouTube","Material for MkDocs"]},{"location":"material-mkdocs-getting-started-2024/#default-font","title":"Default Font","text":"<p>Let's change the default font to <code>Merriweather Sans</code>:</p> mkdocs.yml<pre><code>theme:\n  font:\n    text: Merriweather Sans\n</code></pre>","tags":["YouTube","Material for MkDocs"]},{"location":"material-mkdocs-getting-started-2024/#code-font","title":"Code Font","text":"<p>We can also change the font of the <code>code</code> in our docs:</p> mkdocs.yml<pre><code>theme:\n  font:\n    text: Merriweather Sans\n    code: Red Hat Mono\n</code></pre> <p>If you want to add additional fonts beyond Google fonts, or change other font configuration, do check the Material font documentation</p>","tags":["YouTube","Material for MkDocs"]},{"location":"material-mkdocs-getting-started-2024/#emojs","title":"Emojs","text":"<p>Material for MkDocs offers the possibility of using over 10,000 emojis and icons in your documentation with minimal configuration.</p> <p>Browse through all available emojis and icons on the Material Emoji Documentation.</p> <p>To add the ability to use these to your documentation portal, add this config to your <code>mkdocs.yml</code>:</p> mkdocs.yml<pre><code>markdown_extensions:\n  - attr_list\n  - pymdownx.emoji:\n      emoji_index: !!python/name:material.extensions.emoji.twemoji\n      emoji_generator: !!python/name:material.extensions.emoji.to_svg\n</code></pre> <p>Then simply add a sentence to any of your documentation files (e.g.<code>index.md</code>) with the emoji or icon code.</p>","tags":["YouTube","Material for MkDocs"]},{"location":"material-mkdocs-getting-started-2024/#logos-and-icons","title":"Logos and Icons","text":"<p>Now that we have emojis and icons setup in our documentation, we can easily change the logo of our site.</p>","tags":["YouTube","Material for MkDocs"]},{"location":"material-mkdocs-getting-started-2024/#setting-logo-to-an-icon","title":"Setting Logo to an Icon","text":"<p>Search for a suitable icon for your logo (for example <code>solid-w</code>).</p> <p>Change the icon by making this change to the <code>mkdocs.yml</code></p> mkdocs.yml<pre><code>theme:\n  icon:\n    logo: fontawesome/solid/w\n</code></pre>","tags":["YouTube","Material for MkDocs"]},{"location":"material-mkdocs-getting-started-2024/#setting-logo-to-an-image","title":"Setting Logo to an Image","text":"<p>If you would prefer to set the logo of your site to your own custom image, follow these steps:</p> <ul> <li>Inside the <code>docs</code> folder create an <code>assets</code> folder.</li> <li>Add the <code>logo.png</code> file to this folder (i.e. the file with the logo you want to use)</li> <li>Now change <code>mkdocs.yml</code> to:</li> </ul> mkdocs.yml<pre><code>theme:\n  logo: assets/logo.png\n</code></pre>","tags":["YouTube","Material for MkDocs"]},{"location":"material-mkdocs-getting-started-2024/#setting-the-favicon","title":"Setting the Favicon","text":"<p>We can also set the Favicon for our site in a similar way:</p> <ul> <li>First add the <code>favicon.ico</code> file to the <code>assets</code> folder we just created.</li> <li>Then adjust <code>mkdocs.yml</code> to:</li> </ul> mkdocs.yml<pre><code>theme:\n  favicon: assets/favicon.ico\n</code></pre> <p>You can change other icons on your MkDocs Material site in a similar way, but if you want to know more check the Material Logo and Icons Documentation.</p>","tags":["YouTube","Material for MkDocs"]},{"location":"material-mkdocs-getting-started-2024/#code-blocks","title":"Code Blocks","text":"<p>One of the best features of Material for MkDocs is it's ability to display code in a clear, crisp and distinctive manner.</p> <ul> <li>Create a new page in your documentation called <code>code-examples.md</code>.</li> <li>Add the following example  Python code:</li> </ul> code-examples.md<pre><code># Function to add two numbers\ndef add_two_numbers(num1, num2):\n    return num1 + num2\n\n# Example usage\nresult = add_two_numbers(5, 3)\nprint('The sum is:', result)\n</code></pre> <p>The code will display in a code block in the documentation portal, but won't have syntax colouring. To enable syntax colouring, add this extra configuration to our <code>mkdocs.yml</code>:</p> mkdocs.yml<pre><code>markdown_extensions:\n  - pymdownx.highlight:\n      anchor_linenums: true\n      line_spans: __span\n      pygments_lang_class: true\n  - pymdownx.inlinehilite\n  - pymdownx.snippets\n  - pymdownx.superfences\n</code></pre> <p>The previous code block we added will now be nicely highlighted.</p> <p>If you want to add code in another language, find the lexers (short names for the language) on this pygments page. For example:</p> <ul> <li> Typescript</li> <li> Java</li> <li> GoLang</li> </ul>","tags":["YouTube","Material for MkDocs"]},{"location":"material-mkdocs-getting-started-2024/#add-title","title":"Add Title","text":"<ul> <li>Add a title to the codeblock by typing <code>py title=\"add_numbers.py\"</code>:</li> </ul> Code block with title<pre><code>```py title=\"add_numbers.py\" \n# Function to add two numbers\ndef add_two_numbers(num1, num2):\n    return num1 + num2\n\n# Example usage\nresult = add_two_numbers(5, 3)\nprint('The sum is:', result)\n```\n</code></pre> code_examples.md<pre><code># Function to add two numbers\ndef add_two_numbers(num1, num2):\n    return num1 + num2\n\n# Example usage\nresult = add_two_numbers(5, 3)\nprint('The sum is:', result)\n</code></pre>","tags":["YouTube","Material for MkDocs"]},{"location":"material-mkdocs-getting-started-2024/#add-line-numbers","title":"Add Line Numbers","text":"<p>Add line numbers by typing <code>py linenums=\"1\"</code>:</p> Code block with line numbers<pre><code>```py title=\"add_numbers.py\" linenums=\"1\"\n# Function to add two numbers\ndef add_two_numbers(num1, num2):\n    return num1 + num2\n\n# Example usage\nresult = add_two_numbers(5, 3)\nprint('The sum is:', result)\n```\n</code></pre> code_examples.md<pre><code># Function to add two numbers\ndef add_two_numbers(num1, num2):\n    return num1 + num2\n\n# Example usage\nresult = add_two_numbers(5, 3)\nprint('The sum is:', result)\n</code></pre> <p>You can also start the line numbers from a different number e.g. <code>py linenums=\"5\"</code></p>","tags":["YouTube","Material for MkDocs"]},{"location":"material-mkdocs-getting-started-2024/#highlight-lines","title":"Highlight Lines","text":"<p>To highlight lines type <code>py hl_lines=\"2-4\"</code>. </p> <p>Here is another codeblock to show this:</p> Highlight Lines<pre><code>```js title=\"code-examples.md\" linenums=\"1\" hl_lines=\"2-4\"\n// Function to concatenate two strings\nfunction concatenateStrings(str1, str2) {\n  return str1 + str2;\n}\n\n// Example usage\nconst result = concatenateStrings(\"Hello, \", \"World!\");\nconsole.log(\"The concatenated string is:\", result);\n```\n</code></pre> code-examples.md<pre><code>// Function to concatenate two strings\nfunction concatenateStrings(str1, str2) {\n  return str1 + str2;\n}\n\n// Example usage\nconst result = concatenateStrings(\"Hello, \", \"World!\");\nconsole.log(\"The concatenated string is:\", result);\n</code></pre>","tags":["YouTube","Material for MkDocs"]},{"location":"material-mkdocs-getting-started-2024/#content-tabs","title":"Content Tabs","text":"<p>Content tabs are useful when you want to group alternative content together. To enable content tabs add the following to the <code>mkdocs.yml</code> file:</p> mkdocs.yml<pre><code>markdown_extensions:\n  - pymdownx.superfences\n  - pymdownx.tabbed:\n      alternate_style: true\n</code></pre> <ul> <li>Create a new page called <code>content-tabs.md</code></li> <li>Add the following to show <code>generic</code> content tabs:</li> </ul> content-tabs.md<pre><code>## Content Tabs\n\nThis is some examples of content tabs.\n\n### Generic Content\n\n=== \"Plain text\"\n\n    This is some plain text\n\n=== \"Unordered list\"\n\n    * First item\n    * Second item\n    * Third item\n\n=== \"Ordered list\"\n\n    1. First item\n    2. Second item\n    3. Third item\n</code></pre> <p>Here is an example with different code blocks:</p> content-tabs.md<pre><code>### Code Blocks in Content Tabs\n\n=== \"Python\"\n\n    ```py\n    def main():\n        print(\"Hello world!\")\n\n    if __name__ == \"__main__\":\n        main()\n    ```\n\n=== \"JavaScript\"\n\n    ```js\n    function main() {\n        console.log(\"Hello world!\");\n    }\n\n    main();\n    ```\n</code></pre>","tags":["YouTube","Material for MkDocs"]},{"location":"material-mkdocs-getting-started-2024/#admonitions-aka-callouts","title":"Admonitions (aka Callouts)","text":"<p>Admonitions - also known as callouts - are great for highlighting parts of the documentation.</p> <p>To enable them, add this configuration to the <code>mkdocs.yml</code>:</p> mkdocs.yml<pre><code>markdown_extensions:\n  - admonition\n  - pymdownx.details\n  - pymdownx.superfences\n</code></pre> <ul> <li>Create a new page called <code>admonitions.md</code></li> <li>This is an example of an adominition with a title:</li> </ul> <pre><code>!!! note \"Title of the callout\"\n\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n</code></pre> <p>Title of the callout</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p>","tags":["YouTube","Material for MkDocs"]},{"location":"material-mkdocs-getting-started-2024/#collapsible-admonitions","title":"Collapsible Admonitions","text":"<p>You can also have a collapisble admonition:</p> <pre><code>Collapsible callout:\n\n??? info \"Collapsible callout\"\n\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n</code></pre> Collapsible callout <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <p>Check the Admonitions documentation for other examples of admonitions you can use.</p>","tags":["YouTube","Material for MkDocs"]},{"location":"material-mkdocs-getting-started-2024/#diagrams","title":"Diagrams","text":"<p>Material for MkDocs allows you to easily implement statically rendered diagrams in your documentation. Examples of diagrams you might include are:</p> <ul> <li>Flow charts</li> <li>Sequence diagrams</li> <li>State diagrams</li> <li>Class diagrams</li> <li>Entity-relationship diagrams</li> </ul> <p>To enable diagrams add this configuration to the <code>mkdocs.yml</code>:</p> mkdocs.yml<pre><code>markdown_extensions:\n  - pymdownx.superfences:\n      custom_fences:\n        - name: mermaid\n          class: mermaid\n          format: !!python/name:pymdownx.superfences.fence_code_format\n</code></pre> <ul> <li>Create a new page called <code>diagram-examples.md</code></li> <li>Here is a flowchart example:</li> </ul> diagram-examples.md<pre><code># Diagram Examples\n\n## Flowcharts\n\n```mermaid\ngraph LR\n  A[Start] --&gt; B{Failure?};\n  B --&gt;|Yes| C[Investigate...];\n  C --&gt; D[Debug];\n  D --&gt; B;\n  B ----&gt;|No| E[Success!];\n```\n</code></pre> <pre><code>graph LR\n  A[Start] --&gt; B{Failure?};\n  B --&gt;|Yes| C[Investigate...];\n  C --&gt; D[Debug];\n  D --&gt; B;\n  B ----&gt;|No| E[Success!];</code></pre> <ul> <li>This is a sequence diagram example:</li> </ul> <p>diagram-examples.md<pre><code>## Sequence Diagrams\n\n```mermaid\nsequenceDiagram\n  autonumber\n  Server-&gt;&gt;Terminal: Send request\n  loop Health\n      Terminal-&gt;&gt;Terminal: Check for health\n  end\n  Note right of Terminal: System online\n  Terminal--&gt;&gt;Server: Everything is OK\n  Terminal-&gt;&gt;Database: Request customer data\n  Database--&gt;&gt;Terminal: Customer data\n```\n</code></pre> <pre><code>sequenceDiagram\n  autonumber\n  Server-&gt;&gt;Terminal: Send request\n  loop Health\n      Terminal-&gt;&gt;Terminal: Check for health\n  end\n  Note right of Terminal: System online\n  Terminal--&gt;&gt;Server: Everything is OK\n  Terminal-&gt;&gt;Database: Request customer data\n  Database--&gt;&gt;Terminal: Customer data</code></pre></p> <p>Remember to check the diagrams documentation for further diagram examples.</p>","tags":["YouTube","Material for MkDocs"]},{"location":"material-mkdocs-getting-started-2024/#footer","title":"Footer","text":"<p>We can enable the navigation footer by adding the following to the <code>mkdocs.yml</code>:</p> mkdocs.yml<pre><code>theme:\n  features:\n    - navigation.footer\n</code></pre> <p>You might want to add social icons to your footer like this:</p> mkdocs.yml<pre><code>extra:\n  social:\n    - icon: simple/youtube\n      link: https://youtube.com/@james-willett\n    - icon: simple/linkedin\n      link: https://linkedin.com/in/willettjames\n</code></pre> <p>And you can add the copyright notice:</p> mkdocs.yml<pre><code>copyright: Copyright &amp;copy; 2024 James Willett\n</code></pre>","tags":["YouTube","Material for MkDocs"]},{"location":"material-mkdocs-getting-started-2024/#publish-site-to-github-pages","title":"Publish site to GitHub Pages","text":"<p>In order to publish our site on GitHub Pages, first create the <code>.github/workflows/ci.yml</code> file and paste in the example code:</p> .github/workflows/ci.yml<pre><code>name: ci\non:\n  push:\n    branches:\n      - master\n      - main\npermissions:\n  contents: write\njobs:\n  deploy:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v4\n      - name: Configure Git Credentials\n        run: |\n          git config user.name github-actions[bot]\n          git config user.email 41898282+github-actions[bot]@users.noreply.github.com\n      - uses: actions/setup-python@v5\n        with:\n          python-version: 3.x\n      - run: echo \"cache_id=$(date --utc '+%V')\" &gt;&gt; $GITHUB_ENV\n      - uses: actions/cache@v4\n        with:\n          key: mkdocs-material-${{ env.cache_id }}\n          path: .cache\n          restore-keys: |\n            mkdocs-material-\n      - run: pip install mkdocs-material\n      - run: mkdocs gh-deploy --force\n</code></pre> <ul> <li>Create a brand new GitHub repository</li> <li>Hook up that GitHub repository remote with the project code (i.e. do <code>git init</code> then follow instructions to add the remote)</li> <li>Push branch to <code>main</code> on the GitHub repository</li> <li>Go to GitHub and into settings and change pages to <code>deploy from branch</code>, choose the <code>gh-pages</code> branch.</li> <li>A GitHub Action will trigger that deploys the site<ul> <li>For example https://james-willett.github.io/mkdocs-material-tutorial-2024/</li> </ul> </li> </ul>","tags":["YouTube","Material for MkDocs"]},{"location":"mkdocscommands/","title":"Welcome to AIChampions Learn !","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"mkdocscommands/#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"mkdocscommands/#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"python/","title":"Welcome to the All things Python ! Hurray This has been updated v01","text":"<p>01 Getting Started with Python:</p> 01 First - Getting Started with Python <p>Language Background Links to key Resources</p> <p>02 Environment Setup:</p> Details of Environment Setup <p>We can use Google Colab or setup a local environment.  Use an IDE like Visual Studio or AI based IDE like Cursor or Replit</p>"},{"location":"tags/","title":"Tags","text":""},{"location":"tags/#tag:material-for-mkdocs","title":"Material for MkDocs","text":"<ul> <li>            Getting Started with Material for MkDocs New !          </li> </ul>"},{"location":"tags/#tag:youtube","title":"YouTube","text":"<ul> <li>            Getting Started with Material for MkDocs New !          </li> </ul>"},{"location":"python/01GettingStarted/","title":"01GettingStarted","text":""},{"location":"python/01GettingStarted/#welcome-to-the-all-things-python","title":"Welcome to the All things Python !","text":"<p>01 Getting Started with Python:</p> 01 Getting Started with Python <p>Language Background Links to key Resources</p> <p>02 Environment Setup:</p> Details of Environment Setup <p>We can use Google Colab or setup a local environment.  Use an IDE like Visual Studio or AI based IDE like Cursor or Replit</p>"},{"location":"python/01GettingStarted/#flowcharts","title":"Flowcharts","text":""},{"location":"python/02GettingStarted/","title":"02GettingStarted","text":""},{"location":"python/02GettingStarted/#welcome-to-the-all-things-python","title":"Welcome to the All things Python !","text":"<p>01 Getting Started with Python:</p> 01 Getting Started with Python <p>Language Background Links to key Resources</p> <p>02 Environment Setup:</p> Details of Environment Setup <p>We can use Google Colab or setup a local environment.  Use an IDE like Visual Studio or AI based IDE like Cursor or Replit</p>"},{"location":"python/02GettingStarted/#_1","title":"02GettingStarted","text":""}]}