{"config":{"lang":["en"],"separator":"[\\s\\-,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#welcome-to-aichampions-learn","title":"Welcome to AIChampions Learn !","text":"<p>Link to our homepage aichampionshub.com.</p>"},{"location":"#latest-code-news","title":"Latest Code / News","text":"<ul> <li>This is test</li> </ul>"},{"location":"#past-articles","title":"Past Articles","text":"<pre><code>mkdocs.yml    # The configuration file.\n</code></pre>"},{"location":"admonitions/","title":"Admonitions","text":"<p>Example of admonition</p> <p>Title of the Callout</p> <p>Sample Text Line 2 Line 3</p> <p>Collapsible callout:</p> Collapsible callout <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p>"},{"location":"admonitions/#diagram-examples","title":"Diagram Examples","text":""},{"location":"admonitions/#flowcharts","title":"Flowcharts","text":"<p>```mermaid graph LR   A[Start] --&gt; B{Failure?};   B --&gt;|Yes| C[Investigate...];   C --&gt; D[Debug];   D --&gt; B;   B ----&gt;|No| E[Success!];</p> <p>## Sequence Diagrams</p> <p>```mermaid sequenceDiagram   autonumber   Server-&gt;&gt;Terminal: Send request   loop Health       Terminal-&gt;&gt;Terminal: Check for health   end   Note right of Terminal: System online   Terminal--&gt;&gt;Server: Everything is OK   Terminal-&gt;&gt;Database: Request customer data   Database--&gt;&gt;Terminal: Customer data</p>"},{"location":"tags/","title":"Tags","text":""},{"location":"tags/#tag:material-for-mkdocs","title":"Material for MkDocs","text":"<ul> <li>            Getting Started with Material for MkDocs New !          </li> </ul>"},{"location":"tags/#tag:youtube","title":"YouTube","text":"<ul> <li>            Getting Started with Material for MkDocs New !          </li> </ul>"},{"location":"Internal%20Samples/code-examples/","title":"Code Examples","text":"<p>For full documentation visit mkdocs.org.</p> add_numbers.py<pre><code># Function to add two numbers\ndef add_two_numbers(num1, num2):\n    return num1 + num2\n\n# Example usage\nresult = add_two_numbers(5, 3)\nprint('The sum is:', result)\n\n// Function to concatenate two strings\nfunction concatenateStrings(str1, str2) {\n  return str1 + str2;\n}\n\n// Example usage\nconst result = concatenateStrings(\"Hello, \", \"World!\");\nconsole.log(\"The concatenated string is:\", result);\n</code></pre>"},{"location":"Internal%20Samples/content-tabs/","title":"Content tabs","text":""},{"location":"Internal%20Samples/content-tabs/#content-tabs","title":"Content Tabs","text":"<p>This is some examples of Content Tabs.</p>"},{"location":"Internal%20Samples/content-tabs/#generic-content","title":"Generic Content","text":"Plain textUnordered ListOrdered List <p>This is some plain text.</p> <ul> <li>First Item.</li> <li>Second Item</li> <li>Third Item</li> </ul> <ol> <li>First Item.</li> <li>Second Item</li> <li>Third Item</li> </ol>"},{"location":"Internal%20Samples/content-tabs_New_Test/","title":"content tabs New Test","text":""},{"location":"Internal%20Samples/content-tabs_New_Test/#new-content-tabs","title":"New Content Tabs","text":"<p>This is some examples of NEW Content Tabs.</p>"},{"location":"Internal%20Samples/content-tabs_New_Test/#generic-content","title":"Generic Content","text":"Plain textUnordered ListOrdered List <p>This is some plain text.</p> <ul> <li>First Item.</li> <li>Second Item</li> <li>Third Item</li> </ul> <ol> <li>First Item.</li> <li>Second Item</li> <li>Third Item</li> </ol>"},{"location":"Internal%20Samples/material-mkdocs-getting-started-2024/","title":"Getting Started with Material for MkDocs New !","text":"<p>Supporting blog post for my Material for MkDocs: Full Tutorial To Build And Deploy Your Docs Portal video on  YouTube.</p> <p></p>","tags":["YouTube","Material for MkDocs"]},{"location":"Internal%20Samples/material-mkdocs-getting-started-2024/#introduction","title":"Introduction","text":"<p>Material for MkDocs is the ultimate framework for creating stunning, interactive documentation sites. In this tutorial, we\u2019ll be creating a new documentation portal completely from scratch, and then hosting that on the web for free using GitHub pages.</p> <p>Along the way, you'll learn just a handful of the awesome features that Material for MkDocs comes bundled with, such as:</p> <ul> <li>Setting a dynamic colour scheme</li> <li>Adding a splash of personality with emojis, icons and logos to make your content visually appealing</li> <li>How to create custom code blocks that adjust based on the programming language specified</li> <li>How to better organise your documentation using content tabs</li> <li>How to empathize parts of your content using admonitions - also known as callouts</li> <li>And how to bring your ideas to life with statically rendered diagrams directly in your docs</li> </ul> Tip <p>This is an in-depth tutorial. If this is your first time using Material for MkDocs then you're probably best to just follow it all through from the beginning.</p> <p>But if you've used Material for MkDocs before and just want to know about a certain feature, you can use the Table of contents on the right to jump around this guide at your leisure.</p> <p>Supporting GitHub Repository</p> <p>I've created a supporting GitHub repository for all the code examples featured in this tutorial</p>","tags":["YouTube","Material for MkDocs"]},{"location":"Internal%20Samples/material-mkdocs-getting-started-2024/#mkdocs-vs-material-for-mkdocs","title":"'MkDocs' vs 'Material for MkDocs'","text":"<p>Before we begin the tutorial, let's quickly go over the differences between MkDocs and Material for MkDocs, as there is often some confusion.</p> <p>Plain MkDocs is a static site generator specifically designed for creating documentation websites. So by using MkDocs alone, you get a relatively vanilla and straightforward site for your documentation.</p> <p>On the other hand, Material for MkDocs is a theme built on top of MkDocs. It transforms your documentation site with a modern, responsive design inspired by Material Design principles. </p> <p>What's important to note is that this theme doesn't just change the look; it enhances functionality with built-in plugins that support features like:</p> <ul> <li>Blog posts </li> <li>Social cards</li> <li>Advanced search capabilities </li> <li>and lots more...</li> </ul> <p>Info</p> <p>So to summarise, MkDocs provides the core functionality of building a static site, while Material for MkDocs signficantly elevates the visual and interactive experience of your documentation.</p> <p>Now that we understand the differences, let's get to work on setting up our new Material for MkDocs portal.</p>","tags":["YouTube","Material for MkDocs"]},{"location":"Internal%20Samples/material-mkdocs-getting-started-2024/#prerequisites","title":"Prerequisites","text":"<p>These are the prerequistes you\u2019ll need to have installed if you want to follow along with this tutorial:</p> <ul> <li> Python<ul> <li>pip - the Python package manager (included by default in Python 3.4 and later)</li> </ul> </li> <li> Visual Studio Code - or any other IDE of your choice</li> <li> GitHub Account - as we will deploy the site on GitHub pages</li> </ul>","tags":["YouTube","Material for MkDocs"]},{"location":"Internal%20Samples/material-mkdocs-getting-started-2024/#initial-installation","title":"Initial Installation","text":"<ul> <li>Open a terminal in the folder that you want to create the project in</li> <li>Type <code>which python</code> or <code>which python3</code> to check Python is installed</li> </ul> To check Python location on  Windows <p>Type <code>where python</code> instead on the command prompt or Powershell terminal</p> <ul> <li>Setup a Python virtual environment by typing <code>python -m venv venv</code></li> <li>Type <code>source venv/bin/activate</code> to activate the virtual environment</li> </ul> To activate Python virtual environment on  Windows <p>Type <code>.\\venv\\Scripts\\activate</code> instead</p> <ul> <li>Check pip version <code>pip --version</code></li> <li>Install mkdocs material - <code>pip install mkdocs-material</code></li> <li>Open Visual studio code in this folder with <code>code .</code></li> <li>Open a terminal within Visual Studio code</li> <li>Activate the virtual environment on the new terminal with <code>source venv/bin/activate</code></li> <li>Create a new site <code>mkdocs new .</code></li> <li>Add the following basic <code>mkdocs.yml</code> configuration:</li> </ul> mkdocs.yml<pre><code>site_name: My MkDocs Material Documentation\nsite_url: https://sitename.example\ntheme:\n  name: material\n</code></pre> <ul> <li>Type <code>mkdocs serve</code> to launch the site</li> <li>Check the site at http://localhost:8000</li> </ul>","tags":["YouTube","Material for MkDocs"]},{"location":"Internal%20Samples/material-mkdocs-getting-started-2024/#add-yaml-schema-validation","title":"Add Yaml Schema Validation","text":"<p>To activate most of the useful features in MkDocs Material, we need to make changes to the <code>mkdocs.yml</code> file. Making these changes is much easier with the help of YAML schema validation.</p> <ul> <li>Within the Extensions tab of Visual Studio Code, install the Red Hat VS Code Yaml extension.</li> <li>In VsCode open <code>settings.json</code>. </li> </ul> How to open <code>settings.json</code> in  Visual Studio Code <p>You can open <code>settings.json</code> by clicking the  gear icon in the bottom left, then clicking the  document icon in the top right.</p> <ul> <li>Add the following at the bottom of the <code>settings.json</code> file:</li> </ul> settings.json<pre><code>  \"yaml.schemas\": {\n    \"https://squidfunk.github.io/mkdocs-material/schema.json\": \"mkdocs.yml\"\n  },\n  \"yaml.customTags\": [\n    \"!ENV scalar\",\n    \"!ENV sequence\",\n    \"!relative scalar\",\n    \"tag:yaml.org,2002:python/name:material.extensions.emoji.to_svg\",\n    \"tag:yaml.org,2002:python/name:material.extensions.emoji.twemoji\",\n    \"tag:yaml.org,2002:python/name:pymdownx.superfences.fence_code_format\"\n  ]\n</code></pre> <p>Now when you mouse-over any of the entries in the <code>mkdocs.yml</code> file, you'll see a popup with more information about that entry. Any errors in the yaml file will also be highlighted.</p>","tags":["YouTube","Material for MkDocs"]},{"location":"Internal%20Samples/material-mkdocs-getting-started-2024/#adjust-color-scheme","title":"Adjust Color Scheme","text":"<p>We can easily change the color scheme of our documentation.</p>","tags":["YouTube","Material for MkDocs"]},{"location":"Internal%20Samples/material-mkdocs-getting-started-2024/#switch-to-dark-mode","title":"Switch to Dark Mode","text":"<p>Start by changing the color scheme to  dark. Add this to the <code>mkdocs.yml</code> file:</p> mkdocs.yml<pre><code>theme:\n  name: material\n  palette:\n    scheme: slate\n</code></pre>","tags":["YouTube","Material for MkDocs"]},{"location":"Internal%20Samples/material-mkdocs-getting-started-2024/#primary-colour","title":"Primary Colour","text":"<p>Let's also change the primary colour in our documentation to  green by adding <code>primary: green</code> under the palette:</p> mkdocs.yml<pre><code>theme:\n  name: material\n  palette:\n    scheme: slate\n    primary: green\n</code></pre> <p>We can see that this makes the banner green, and also the hyperlinks green.</p>","tags":["YouTube","Material for MkDocs"]},{"location":"Internal%20Samples/material-mkdocs-getting-started-2024/#accent-colour","title":"Accent Colour","text":"<p>Let's also change the accent colour to  <code>deep purple</code> :</p> mkdocs.yml<pre><code>theme:\n  name: material\n  palette:\n    scheme: slate\n    primary: green\n    accent: deep purple\n</code></pre> <p>Now when we hover over the links with the mouse, they turn purple.</p>","tags":["YouTube","Material for MkDocs"]},{"location":"Internal%20Samples/material-mkdocs-getting-started-2024/#toggle-lightdark-modes","title":"Toggle Light/Dark Modes","text":"<p>We can also add a toggle to our site that allows the user to switch between  light and  dark modes. Add this to <code>palette</code> in the <code>mkdocs.yml</code> file to enable this:</p> mkdocs.yml<pre><code>theme:\n  name: material\n  palette:\n    # Dark Mode\n    - scheme: slate\n      toggle:\n        icon: material/weather-sunny\n        name: Dark mode\n      primary: green\n      accent: deep purple\n\n    # Light Mode\n    - scheme: default\n      toggle:\n        icon: material/weather-night\n        name: Light mode\n      primary: blue\n      accent: deep orange\n</code></pre> <p>There are lots of other configuration options available to you in Material for MkDocs if you want to adjust the colour, for example adding custom colours or automatically switching between light and dark mode based on the time of day.</p> <p>For more information, check the colors documentation page.</p>","tags":["YouTube","Material for MkDocs"]},{"location":"Internal%20Samples/material-mkdocs-getting-started-2024/#adjust-font","title":"Adjust Font","text":"<p>Material for MkDocs supports any Google font directly out of the box.</p>","tags":["YouTube","Material for MkDocs"]},{"location":"Internal%20Samples/material-mkdocs-getting-started-2024/#default-font","title":"Default Font","text":"<p>Let's change the default font to <code>Merriweather Sans</code>:</p> mkdocs.yml<pre><code>theme:\n  font:\n    text: Merriweather Sans\n</code></pre>","tags":["YouTube","Material for MkDocs"]},{"location":"Internal%20Samples/material-mkdocs-getting-started-2024/#code-font","title":"Code Font","text":"<p>We can also change the font of the <code>code</code> in our docs:</p> mkdocs.yml<pre><code>theme:\n  font:\n    text: Merriweather Sans\n    code: Red Hat Mono\n</code></pre> <p>If you want to add additional fonts beyond Google fonts, or change other font configuration, do check the Material font documentation</p>","tags":["YouTube","Material for MkDocs"]},{"location":"Internal%20Samples/material-mkdocs-getting-started-2024/#emojs","title":"Emojs","text":"<p>Material for MkDocs offers the possibility of using over 10,000 emojis and icons in your documentation with minimal configuration.</p> <p>Browse through all available emojis and icons on the Material Emoji Documentation.</p> <p>To add the ability to use these to your documentation portal, add this config to your <code>mkdocs.yml</code>:</p> mkdocs.yml<pre><code>markdown_extensions:\n  - attr_list\n  - pymdownx.emoji:\n      emoji_index: !!python/name:material.extensions.emoji.twemoji\n      emoji_generator: !!python/name:material.extensions.emoji.to_svg\n</code></pre> <p>Then simply add a sentence to any of your documentation files (e.g.<code>index.md</code>) with the emoji or icon code.</p>","tags":["YouTube","Material for MkDocs"]},{"location":"Internal%20Samples/material-mkdocs-getting-started-2024/#logos-and-icons","title":"Logos and Icons","text":"<p>Now that we have emojis and icons setup in our documentation, we can easily change the logo of our site.</p>","tags":["YouTube","Material for MkDocs"]},{"location":"Internal%20Samples/material-mkdocs-getting-started-2024/#setting-logo-to-an-icon","title":"Setting Logo to an Icon","text":"<p>Search for a suitable icon for your logo (for example <code>solid-w</code>).</p> <p>Change the icon by making this change to the <code>mkdocs.yml</code></p> mkdocs.yml<pre><code>theme:\n  icon:\n    logo: fontawesome/solid/w\n</code></pre>","tags":["YouTube","Material for MkDocs"]},{"location":"Internal%20Samples/material-mkdocs-getting-started-2024/#setting-logo-to-an-image","title":"Setting Logo to an Image","text":"<p>If you would prefer to set the logo of your site to your own custom image, follow these steps:</p> <ul> <li>Inside the <code>docs</code> folder create an <code>assets</code> folder.</li> <li>Add the <code>logo.png</code> file to this folder (i.e. the file with the logo you want to use)</li> <li>Now change <code>mkdocs.yml</code> to:</li> </ul> mkdocs.yml<pre><code>theme:\n  logo: assets/logo.png\n</code></pre>","tags":["YouTube","Material for MkDocs"]},{"location":"Internal%20Samples/material-mkdocs-getting-started-2024/#setting-the-favicon","title":"Setting the Favicon","text":"<p>We can also set the Favicon for our site in a similar way:</p> <ul> <li>First add the <code>favicon.ico</code> file to the <code>assets</code> folder we just created.</li> <li>Then adjust <code>mkdocs.yml</code> to:</li> </ul> mkdocs.yml<pre><code>theme:\n  favicon: assets/favicon.ico\n</code></pre> <p>You can change other icons on your MkDocs Material site in a similar way, but if you want to know more check the Material Logo and Icons Documentation.</p>","tags":["YouTube","Material for MkDocs"]},{"location":"Internal%20Samples/material-mkdocs-getting-started-2024/#code-blocks","title":"Code Blocks","text":"<p>One of the best features of Material for MkDocs is it's ability to display code in a clear, crisp and distinctive manner.</p> <ul> <li>Create a new page in your documentation called <code>code-examples.md</code>.</li> <li>Add the following example  Python code:</li> </ul> code-examples.md<pre><code># Function to add two numbers\ndef add_two_numbers(num1, num2):\n    return num1 + num2\n\n# Example usage\nresult = add_two_numbers(5, 3)\nprint('The sum is:', result)\n</code></pre> <p>The code will display in a code block in the documentation portal, but won't have syntax colouring. To enable syntax colouring, add this extra configuration to our <code>mkdocs.yml</code>:</p> mkdocs.yml<pre><code>markdown_extensions:\n  - pymdownx.highlight:\n      anchor_linenums: true\n      line_spans: __span\n      pygments_lang_class: true\n  - pymdownx.inlinehilite\n  - pymdownx.snippets\n  - pymdownx.superfences\n</code></pre> <p>The previous code block we added will now be nicely highlighted.</p> <p>If you want to add code in another language, find the lexers (short names for the language) on this pygments page. For example:</p> <ul> <li> Typescript</li> <li> Java</li> <li> GoLang</li> </ul>","tags":["YouTube","Material for MkDocs"]},{"location":"Internal%20Samples/material-mkdocs-getting-started-2024/#add-title","title":"Add Title","text":"<ul> <li>Add a title to the codeblock by typing <code>py title=\"add_numbers.py\"</code>:</li> </ul> Code block with title<pre><code>```py title=\"add_numbers.py\" \n# Function to add two numbers\ndef add_two_numbers(num1, num2):\n    return num1 + num2\n\n# Example usage\nresult = add_two_numbers(5, 3)\nprint('The sum is:', result)\n```\n</code></pre> code_examples.md<pre><code># Function to add two numbers\ndef add_two_numbers(num1, num2):\n    return num1 + num2\n\n# Example usage\nresult = add_two_numbers(5, 3)\nprint('The sum is:', result)\n</code></pre>","tags":["YouTube","Material for MkDocs"]},{"location":"Internal%20Samples/material-mkdocs-getting-started-2024/#add-line-numbers","title":"Add Line Numbers","text":"<p>Add line numbers by typing <code>py linenums=\"1\"</code>:</p> Code block with line numbers<pre><code>```py title=\"add_numbers.py\" linenums=\"1\"\n# Function to add two numbers\ndef add_two_numbers(num1, num2):\n    return num1 + num2\n\n# Example usage\nresult = add_two_numbers(5, 3)\nprint('The sum is:', result)\n```\n</code></pre> code_examples.md<pre><code># Function to add two numbers\ndef add_two_numbers(num1, num2):\n    return num1 + num2\n\n# Example usage\nresult = add_two_numbers(5, 3)\nprint('The sum is:', result)\n</code></pre> <p>You can also start the line numbers from a different number e.g. <code>py linenums=\"5\"</code></p>","tags":["YouTube","Material for MkDocs"]},{"location":"Internal%20Samples/material-mkdocs-getting-started-2024/#highlight-lines","title":"Highlight Lines","text":"<p>To highlight lines type <code>py hl_lines=\"2-4\"</code>. </p> <p>Here is another codeblock to show this:</p> Highlight Lines<pre><code>```js title=\"code-examples.md\" linenums=\"1\" hl_lines=\"2-4\"\n// Function to concatenate two strings\nfunction concatenateStrings(str1, str2) {\n  return str1 + str2;\n}\n\n// Example usage\nconst result = concatenateStrings(\"Hello, \", \"World!\");\nconsole.log(\"The concatenated string is:\", result);\n```\n</code></pre> code-examples.md<pre><code>// Function to concatenate two strings\nfunction concatenateStrings(str1, str2) {\n  return str1 + str2;\n}\n\n// Example usage\nconst result = concatenateStrings(\"Hello, \", \"World!\");\nconsole.log(\"The concatenated string is:\", result);\n</code></pre>","tags":["YouTube","Material for MkDocs"]},{"location":"Internal%20Samples/material-mkdocs-getting-started-2024/#content-tabs","title":"Content Tabs","text":"<p>Content tabs are useful when you want to group alternative content together. To enable content tabs add the following to the <code>mkdocs.yml</code> file:</p> mkdocs.yml<pre><code>markdown_extensions:\n  - pymdownx.superfences\n  - pymdownx.tabbed:\n      alternate_style: true\n</code></pre> <ul> <li>Create a new page called <code>content-tabs.md</code></li> <li>Add the following to show <code>generic</code> content tabs:</li> </ul> content-tabs.md<pre><code>## Content Tabs\n\nThis is some examples of content tabs.\n\n### Generic Content\n\n=== \"Plain text\"\n\n    This is some plain text\n\n=== \"Unordered list\"\n\n    * First item\n    * Second item\n    * Third item\n\n=== \"Ordered list\"\n\n    1. First item\n    2. Second item\n    3. Third item\n</code></pre> <p>Here is an example with different code blocks:</p> content-tabs.md<pre><code>### Code Blocks in Content Tabs\n\n=== \"Python\"\n\n    ```py\n    def main():\n        print(\"Hello world!\")\n\n    if __name__ == \"__main__\":\n        main()\n    ```\n\n=== \"JavaScript\"\n\n    ```js\n    function main() {\n        console.log(\"Hello world!\");\n    }\n\n    main();\n    ```\n</code></pre>","tags":["YouTube","Material for MkDocs"]},{"location":"Internal%20Samples/material-mkdocs-getting-started-2024/#admonitions-aka-callouts","title":"Admonitions (aka Callouts)","text":"<p>Admonitions - also known as callouts - are great for highlighting parts of the documentation.</p> <p>To enable them, add this configuration to the <code>mkdocs.yml</code>:</p> mkdocs.yml<pre><code>markdown_extensions:\n  - admonition\n  - pymdownx.details\n  - pymdownx.superfences\n</code></pre> <ul> <li>Create a new page called <code>admonitions.md</code></li> <li>This is an example of an adominition with a title:</li> </ul> <pre><code>!!! note \"Title of the callout\"\n\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n</code></pre> <p>Title of the callout</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p>","tags":["YouTube","Material for MkDocs"]},{"location":"Internal%20Samples/material-mkdocs-getting-started-2024/#collapsible-admonitions","title":"Collapsible Admonitions","text":"<p>You can also have a collapisble admonition:</p> <pre><code>Collapsible callout:\n\n??? info \"Collapsible callout\"\n\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n</code></pre> Collapsible callout <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <p>Check the Admonitions documentation for other examples of admonitions you can use.</p>","tags":["YouTube","Material for MkDocs"]},{"location":"Internal%20Samples/material-mkdocs-getting-started-2024/#diagrams","title":"Diagrams","text":"<p>Material for MkDocs allows you to easily implement statically rendered diagrams in your documentation. Examples of diagrams you might include are:</p> <ul> <li>Flow charts</li> <li>Sequence diagrams</li> <li>State diagrams</li> <li>Class diagrams</li> <li>Entity-relationship diagrams</li> </ul> <p>To enable diagrams add this configuration to the <code>mkdocs.yml</code>:</p> mkdocs.yml<pre><code>markdown_extensions:\n  - pymdownx.superfences:\n      custom_fences:\n        - name: mermaid\n          class: mermaid\n          format: !!python/name:pymdownx.superfences.fence_code_format\n</code></pre> <ul> <li>Create a new page called <code>diagram-examples.md</code></li> <li>Here is a flowchart example:</li> </ul> diagram-examples.md<pre><code># Diagram Examples\n\n## Flowcharts\n\n```mermaid\ngraph LR\n  A[Start] --&gt; B{Failure?};\n  B --&gt;|Yes| C[Investigate...];\n  C --&gt; D[Debug];\n  D --&gt; B;\n  B ----&gt;|No| E[Success!];\n```\n</code></pre> <pre><code>graph LR\n  A[Start] --&gt; B{Failure?};\n  B --&gt;|Yes| C[Investigate...];\n  C --&gt; D[Debug];\n  D --&gt; B;\n  B ----&gt;|No| E[Success!];</code></pre> <ul> <li>This is a sequence diagram example:</li> </ul> <p>diagram-examples.md<pre><code>## Sequence Diagrams\n\n```mermaid\nsequenceDiagram\n  autonumber\n  Server-&gt;&gt;Terminal: Send request\n  loop Health\n      Terminal-&gt;&gt;Terminal: Check for health\n  end\n  Note right of Terminal: System online\n  Terminal--&gt;&gt;Server: Everything is OK\n  Terminal-&gt;&gt;Database: Request customer data\n  Database--&gt;&gt;Terminal: Customer data\n```\n</code></pre> <pre><code>sequenceDiagram\n  autonumber\n  Server-&gt;&gt;Terminal: Send request\n  loop Health\n      Terminal-&gt;&gt;Terminal: Check for health\n  end\n  Note right of Terminal: System online\n  Terminal--&gt;&gt;Server: Everything is OK\n  Terminal-&gt;&gt;Database: Request customer data\n  Database--&gt;&gt;Terminal: Customer data</code></pre></p> <p>Remember to check the diagrams documentation for further diagram examples.</p>","tags":["YouTube","Material for MkDocs"]},{"location":"Internal%20Samples/material-mkdocs-getting-started-2024/#footer","title":"Footer","text":"<p>We can enable the navigation footer by adding the following to the <code>mkdocs.yml</code>:</p> mkdocs.yml<pre><code>theme:\n  features:\n    - navigation.footer\n</code></pre> <p>You might want to add social icons to your footer like this:</p> mkdocs.yml<pre><code>extra:\n  social:\n    - icon: simple/youtube\n      link: https://youtube.com/@james-willett\n    - icon: simple/linkedin\n      link: https://linkedin.com/in/willettjames\n</code></pre> <p>And you can add the copyright notice:</p> mkdocs.yml<pre><code>copyright: Copyright &amp;copy; 2024 James Willett\n</code></pre>","tags":["YouTube","Material for MkDocs"]},{"location":"Internal%20Samples/material-mkdocs-getting-started-2024/#publish-site-to-github-pages","title":"Publish site to GitHub Pages","text":"<p>In order to publish our site on GitHub Pages, first create the <code>.github/workflows/ci.yml</code> file and paste in the example code:</p> .github/workflows/ci.yml<pre><code>name: ci\non:\n  push:\n    branches:\n      - master\n      - main\npermissions:\n  contents: write\njobs:\n  deploy:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v4\n      - name: Configure Git Credentials\n        run: |\n          git config user.name github-actions[bot]\n          git config user.email 41898282+github-actions[bot]@users.noreply.github.com\n      - uses: actions/setup-python@v5\n        with:\n          python-version: 3.x\n      - run: echo \"cache_id=$(date --utc '+%V')\" &gt;&gt; $GITHUB_ENV\n      - uses: actions/cache@v4\n        with:\n          key: mkdocs-material-${{ env.cache_id }}\n          path: .cache\n          restore-keys: |\n            mkdocs-material-\n      - run: pip install mkdocs-material\n      - run: mkdocs gh-deploy --force\n</code></pre> <ul> <li>Create a brand new GitHub repository</li> <li>Hook up that GitHub repository remote with the project code (i.e. do <code>git init</code> then follow instructions to add the remote)</li> <li>Push branch to <code>main</code> on the GitHub repository</li> <li>Go to GitHub and into settings and change pages to <code>deploy from branch</code>, choose the <code>gh-pages</code> branch.</li> <li>A GitHub Action will trigger that deploys the site<ul> <li>For example https://james-willett.github.io/mkdocs-material-tutorial-2024/</li> </ul> </li> </ul>","tags":["YouTube","Material for MkDocs"]},{"location":"Internal%20Samples/mkdocscommands/","title":"Welcome to AIChampions Learn !","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"Internal%20Samples/mkdocscommands/#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"Internal%20Samples/mkdocscommands/#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"ai-rag/","title":"Index","text":""},{"location":"ai-rag/#welcome-retrieval-augmented-generation-or-rag","title":"Welcome Retrieval Augmented Generation or RAG !","text":"<p>01 What is RAG:</p> 01 What is RAG <p>Language Background Links to key Resources</p> <p>02 RAG Sample Application:</p> Steps for Sample Application <p>We can use Google Colab or setup a local environment.  Use an IDE like Visual Studio or AI based IDE like Cursor or Replit</p>"},{"location":"blog/demo-nb-md/","title":"Markdown Cheatsheet in a Notebook","text":""},{"location":"blog/demo-nb-md/#markdown-cheatsheet-in-a-notebook","title":"Markdown Cheatsheet in a Notebook\u00b6","text":"<p>From: adam-p/markdown-here</p>"},{"location":"blog/demo-nb-md/#headers","title":"Headers\u00b6","text":"<pre># H1\n\n## H2\n\n### H3\n\n#### H4\n\n##### H5\n\n###### H6\n\nAlternatively, for H1 and H2, an underline-ish style:\n\n# Alt-H1\n\n## Alt-H2\n</pre>"},{"location":"blog/demo-nb-md/#h1","title":"H1\u00b6","text":""},{"location":"blog/demo-nb-md/#h2","title":"H2\u00b6","text":""},{"location":"blog/demo-nb-md/#h3","title":"H3\u00b6","text":""},{"location":"blog/demo-nb-md/#h4","title":"H4\u00b6","text":""},{"location":"blog/demo-nb-md/#h5","title":"H5\u00b6","text":""},{"location":"blog/demo-nb-md/#h6","title":"H6\u00b6","text":"<p>Alternatively, for H1 and H2, an underline-ish style:</p>"},{"location":"blog/demo-nb-md/#alt-h1","title":"Alt-H1\u00b6","text":""},{"location":"blog/demo-nb-md/#alt-h2","title":"Alt-H2\u00b6","text":""},{"location":"blog/demo-nb-md/#emphasis","title":"Emphasis\u00b6","text":"<pre>Emphasis, aka italics, with _asterisks_ or _underscores_.\n\nStrong emphasis, aka bold, with **asterisks** or **underscores**.\n\nCombined emphasis with **asterisks and _underscores_**.\n\nStrikethrough uses two tildes. ~~Scratch this.~~\n</pre> <p>Emphasis, aka italics, with asterisks or underscores.</p> <p>Strong emphasis, aka bold, with asterisks or underscores.</p> <p>Combined emphasis with asterisks and underscores.</p> <p>Strikethrough uses two tildes. Scratch this.</p>"},{"location":"blog/demo-nb-md/#lists","title":"Lists\u00b6","text":"<p>(In this example, leading and trailing spaces are shown with with dots: \u22c5)</p> <pre>1. First ordered list item\n2. Another item\n   \u22c5\u22c5\\* Unordered sub-list.\n3. Actual numbers don't matter, just that it's a number\n   \u22c5\u22c51. Ordered sub-list\n4. And another item.\n\n\u22c5\u22c5\u22c5You can have properly indented paragraphs within list items. Notice the blank line above, and the leading spaces (at least one, but we'll use three here to also align the raw Markdown).\n\n\u22c5\u22c5\u22c5To have a line break without a paragraph, you will need to use two trailing spaces.\u22c5\u22c5\n\u22c5\u22c5\u22c5Note that this line is separate, but within the same paragraph.\u22c5\u22c5\n\u22c5\u22c5\u22c5(This is contrary to the typical GFM line break behaviour, where trailing spaces are not required.)\n\n-   Unordered list can use asterisks\n\n*   Or minuses\n\n-   Or pluses\n</pre> <ol> <li>First ordered list item</li> <li>Another item \u22c5\u22c5* Unordered sub-list.</li> <li>Actual numbers don't matter, just that it's a number \u22c5\u22c51. Ordered sub-list</li> <li>And another item.</li> </ol> <p>\u22c5\u22c5\u22c5You can have properly indented paragraphs within list items. Notice the blank line above, and the leading spaces (at least one, but we'll use three here to also align the raw Markdown).</p> <p>\u22c5\u22c5\u22c5To have a line break without a paragraph, you will need to use two trailing spaces.\u22c5\u22c5 \u22c5\u22c5\u22c5Note that this line is separate, but within the same paragraph.\u22c5\u22c5 \u22c5\u22c5\u22c5(This is contrary to the typical GFM line break behaviour, where trailing spaces are not required.)</p> <ul> <li>Unordered list can use asterisks</li> </ul> <ul> <li>Or minuses</li> </ul> <ul> <li>Or pluses</li> </ul>"},{"location":"blog/demo-nb-md/#links","title":"Links\u00b6","text":"<p>There are two ways to create links.</p> <pre>[I'm an inline-style link](https://www.google.com)\n\n[I'm an inline-style link with title](https://www.google.com \"Google's Homepage\")\n\n[I'm a reference-style link][Arbitrary case-insensitive reference text]\n\n[I'm a relative reference to a repository file](../blob/master/LICENSE)\n\n[You can use numbers for reference-style link definitions][1]\n\nOr leave it empty and use the [link text itself].\n\nURLs and URLs in angle brackets will automatically get turned into links.\nhttp://www.example.com or &lt;http://www.example.com&gt; and sometimes\nexample.com (but not on Github, for example).\n\nSome text to show that the reference links can follow later.\n\n[arbitrary case-insensitive reference text]: https://www.mozilla.org\n[1]: http://slashdot.org\n[link text itself]: http://www.reddit.com\n</pre> <p>I'm an inline-style link</p> <p>I'm an inline-style link with title</p> <p>I'm a reference-style link</p> <p>I'm a relative reference to a repository file</p> <p>You can use numbers for reference-style link definitions</p> <p>Or leave it empty and use the link text itself.</p> <p>URLs and URLs in angle brackets will automatically get turned into links. http://www.example.com or http://www.example.com and sometimes example.com (but not on Github, for example).</p> <p>Some text to show that the reference links can follow later.</p>"},{"location":"blog/demo-nb-md/#images","title":"Images\u00b6","text":"<pre>Here's our logo (hover to see the title text):\n\nInline-style:\n![alt text](https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png \"Logo Title Text 1\")\n\nReference-style:\n![alt text][logo]\n\n[logo]: https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png \"Logo Title Text 2\"\n</pre> <p>Here's our logo (hover to see the title text):</p> <p>Inline-style: </p> <p>Reference-style: </p>"},{"location":"blog/demo-nb-md/#code-and-syntax-highlighting","title":"Code and Syntax Highlighting\u00b6","text":"<p>Code blocks are part of the Markdown spec, but syntax highlighting isn't. However, many renderers -- like Github's and Markdown Here -- support syntax highlighting. Which languages are supported and how those language names should be written will vary from renderer to renderer. Markdown Here supports highlighting for dozens of languages (and not-really-languages, like diffs and HTTP headers); to see the complete list, and how to write the language names, see the highlight.js demo page.</p> <pre>Inline `code` has `back-ticks around` it.\n</pre> <p>Inline <code>code</code> has <code>back-ticks around</code> it.</p> <p>Blocks of code are either fenced by lines with three back-ticks ```, or are indented with four spaces. I recommend only using the fenced code blocks -- they're easier and only they support syntax highlighting.</p> <pre>```javascript\nvar s = \"JavaScript syntax highlighting\";\nalert(s);\n```\n\n```python\ns = \"Python syntax highlighting\"\nprint s\n```\n\n```\nNo language indicated, so no syntax highlighting.\nBut let's throw in a &lt;b&gt;tag&lt;/b&gt;.\n```\n</pre> <pre>var s = \"JavaScript syntax highlighting\";\nalert(s);\n</pre> <pre>s = \"Python syntax highlighting\"\nprint s\n</pre> <pre><code>No language indicated, so no syntax highlighting.\nBut let's throw in a &lt;b&gt;tag&lt;/b&gt;.\n</code></pre>"},{"location":"blog/demo-nb-md/#footnotes","title":"Footnotes\u00b6","text":"<p>Footnotes aren't part of the core Markdown spec, but they supported by GFM.</p> <pre>Here is a simple footnote[^1].\n\nA footnote can also have multiple lines[^2].\n\nYou can also use words, to fit your writing style more closely[^note].\n\n[^1]: My reference.\n[^2]:\n    Every new line should be prefixed with 2 spaces.\n    This allows you to have a footnote with multiple lines.\n\n[^note]:\n    Named footnotes will still render with numbers instead of the text but allow easier identification and linking.\n    This footnote also has been made with a different syntax using 4 spaces for new lines.\n</pre> <p>Here is a simple footnote[^1].</p> <p>A footnote can also have multiple lines[^2].</p> <p>You can also use words, to fit your writing style more closely[^note].</p> <p>[^1]: My reference. [^2]: Every new line should be prefixed with 2 spaces. This allows you to have a footnote with multiple lines.</p> <p>[^note]: Named footnotes will still render with numbers instead of the text but allow easier identification and linking. This footnote also has been made with a different syntax using 4 spaces for new lines.</p>"},{"location":"blog/demo-nb-md/#tables","title":"Tables\u00b6","text":"<p>Tables aren't part of the core Markdown spec, but they are part of GFM and Markdown Here supports them. They are an easy way of adding tables to your email -- a task that would otherwise require copy-pasting from another application.</p> <pre>Colons can be used to align columns.\n\n| Tables        |      Are      |  Cool |\n| ------------- | :-----------: | ----: |\n| col 3 is      | right-aligned | $1600 |\n| col 2 is      |   centered    |   $12 |\n| zebra stripes |   are neat    |    $1 |\n\nThere must be at least 3 dashes separating each header cell.\nThe outer pipes (|) are optional, and you don't need to make the\nraw Markdown line up prettily. You can also use inline Markdown.\n\n| Markdown | Less      | Pretty     |\n| -------- | --------- | ---------- |\n| _Still_  | `renders` | **nicely** |\n| 1        | 2         | 3          |\n</pre> <p>Colons can be used to align columns.</p> Tables Are Cool col 3 is right-aligned $1600 col 2 is centered $12 zebra stripes are neat $1 <p>There must be at least 3 dashes separating each header cell. The outer pipes (|) are optional, and you don't need to make the raw Markdown line up prettily. You can also use inline Markdown.</p> Markdown Less Pretty Still <code>renders</code> nicely 1 2 3"},{"location":"blog/demo-nb-md/#blockquotes","title":"Blockquotes\u00b6","text":"<pre>&gt; Blockquotes are very handy in email to emulate reply text.\n&gt; This line is part of the same quote.\n\nQuote break.\n\n&gt; This is a very long line that will still be quoted properly when it wraps. Oh boy let's keep writing to make sure this is long enough to actually wrap for everyone. Oh, you can _put_ **Markdown** into a blockquote.\n</pre> <p>Blockquotes are very handy in email to emulate reply text. This line is part of the same quote.</p> <p>Quote break.</p> <p>This is a very long line that will still be quoted properly when it wraps. Oh boy let's keep writing to make sure this is long enough to actually wrap for everyone. Oh, you can put Markdown into a blockquote.</p>"},{"location":"blog/demo-nb-md/#inline-html","title":"Inline HTML\u00b6","text":"<p>You can also use raw HTML in your Markdown, and it'll mostly work pretty well.</p> <pre>&lt;dl&gt;\n  &lt;dt&gt;Definition list&lt;/dt&gt;\n  &lt;dd&gt;Is something people use sometimes.&lt;/dd&gt;\n\n  &lt;dt&gt;Markdown in HTML&lt;/dt&gt;\n  &lt;dd&gt;Does *not* work **very** well. Use HTML &lt;em&gt;tags&lt;/em&gt;.&lt;/dd&gt;\n&lt;/dl&gt;\n</pre> Definition list Is something people use sometimes. Markdown in HTML Does *not* work **very** well. Use HTML tags."},{"location":"blog/demo-nb-md/#horizontal-rule","title":"Horizontal Rule\u00b6","text":"<pre>Three or more...\n\n---\n\nHyphens\n\n---\n\nAsterisks\n\n---\n\nUnderscores\n</pre> <p>Three or more...</p> <p>Hyphens</p> <p>Asterisks</p> <p>Underscores</p>"},{"location":"blog/demo-nb-md/#line-breaks","title":"Line Breaks\u00b6","text":"<p>My basic recommendation for learning how line breaks work is to experiment and discover -- hit  once (i.e., insert one newline), then hit it twice (i.e., insert two newlines), see what happens. You'll soon learn to get what you want. \"Markdown Toggle\" is your friend.</p> <p>Here are some things to try out:</p> <pre>Here's a line for us to start with.\n\nThis line is separated from the one above by two newlines, so it will be a _separate paragraph_.\n\nThis line is also a separate paragraph, but...\nThis line is only separated by a single newline, so it's a separate line in the _same paragraph_.\n</pre> <p>Here's a line for us to start with.</p> <p>This line is separated from the one above by two newlines, so it will be a separate paragraph.</p> <p>This line is also a separate paragraph, but... This line is only separated by a single newline, so it's a separate line in the same paragraph.</p>"},{"location":"blog/demo-nb-md/#youtube-videos","title":"YouTube Videos\u00b6","text":"<p>They can't be added directly but you can add an image with a link to the video like this:</p> <pre>&lt;a href=\"http://www.youtube.com/watch?feature=player_embedded&amp;v=YOUTUBE_VIDEO_ID_HERE\n\" target=\"_blank\"&gt;&lt;img src=\"http://img.youtube.com/vi/YOUTUBE_VIDEO_ID_HERE/0.jpg\"\nalt=\"IMAGE ALT TEXT HERE\" width=\"240\" height=\"180\" border=\"10\" /&gt;&lt;/a&gt;\n</pre> <p>Or, in pure Markdown, but losing the image sizing and border:</p> <pre>[![IMAGE ALT TEXT HERE](http://img.youtube.com/vi/YOUTUBE_VIDEO_ID_HERE/0.jpg)](http://www.youtube.com/watch?v=YOUTUBE_VIDEO_ID_HERE)\n</pre>"},{"location":"blog/demo-nb-md/#image-on-the-docs","title":"Image on the docs\u00b6","text":"<p>If you have an image in mkdocs just add it in markdown, it won't be displayed in the Juptyer IDE but it will work on the mkdocs site.</p> <p></p>"},{"location":"blog/demo-nb-md/#mkdocs-material-things","title":"mkdocs-material things\u00b6","text":"<p>Note</p> <p>         If two distributions are similar, then their entropies are similar, implies the KL divergence with respect to two distributions will be smaller. And vica versa. In Variational Inference, the whole idea is to minimize KL divergence so that our approximating distribution $q(\\theta)$ can be made similar to $p(\\theta|D)$.     </p>"},{"location":"blog/demo-nb/","title":"Jupyter Notebook with cells","text":"In\u00a0[1]: tag1 Copied! <pre>a = 1\n</pre> a = 1 In\u00a0[2]: tag1 tag2 Copied! <pre>a\n</pre> a Out[2]: <pre>1</pre> In\u00a0[3]: tag1 tag2 tag3 Copied! <pre>b = 'pew'\n</pre> b = 'pew' In\u00a0[4]: Copied! <pre>b\n</pre> b Out[4]: <pre>'pew'</pre> In\u00a0[5]: Copied! <pre>import re\n</pre> import re In\u00a0[6]: Copied! <pre>text = 'foo bar\\t baz \\tqux'\n</pre> text = 'foo bar\\t baz \\tqux' In\u00a0[7]: Copied! <pre>re.split('\\s+', text)\n</pre> re.split('\\s+', text) <pre>&lt;&gt;:1: SyntaxWarning: invalid escape sequence '\\s'\n&lt;&gt;:1: SyntaxWarning: invalid escape sequence '\\s'\n/var/folders/jh/kqmryfv53533wx83vdhl_5zr0000gn/T/ipykernel_89452/1439998361.py:1: SyntaxWarning: invalid escape sequence '\\s'\n  re.split('\\s+', text)\n</pre> Out[7]: <pre>['foo', 'bar', 'baz', 'qux']</pre> In\u00a0[8]: Copied! <pre>%%latex\n\\begin{align}\n\\nabla \\times \\vec{\\mathbf{B}} -\\, \\frac1c\\, \\frac{\\partial\\vec{\\mathbf{E}}}{\\partial t} &amp; = \\frac{4\\pi}{c}\\vec{\\mathbf{j}} \\\\\n\\nabla \\cdot \\vec{\\mathbf{E}} &amp; = 4 \\pi \\rho \\\\\n\\nabla \\times \\vec{\\mathbf{E}}\\, +\\, \\frac1c\\, \\frac{\\partial\\vec{\\mathbf{B}}}{\\partial t} &amp; = \\vec{\\mathbf{0}} \\\\\n\\nabla \\cdot \\vec{\\mathbf{B}} &amp; = 0\n\\end{align}\n</pre> %%latex \\begin{align} \\nabla \\times \\vec{\\mathbf{B}} -\\, \\frac1c\\, \\frac{\\partial\\vec{\\mathbf{E}}}{\\partial t} &amp; = \\frac{4\\pi}{c}\\vec{\\mathbf{j}} \\\\ \\nabla \\cdot \\vec{\\mathbf{E}} &amp; = 4 \\pi \\rho \\\\ \\nabla \\times \\vec{\\mathbf{E}}\\, +\\, \\frac1c\\, \\frac{\\partial\\vec{\\mathbf{B}}}{\\partial t} &amp; = \\vec{\\mathbf{0}} \\\\ \\nabla \\cdot \\vec{\\mathbf{B}} &amp; = 0 \\end{align}  \\begin{align} \\nabla \\times \\vec{\\mathbf{B}} -\\, \\frac1c\\, \\frac{\\partial\\vec{\\mathbf{E}}}{\\partial t} &amp; = \\frac{4\\pi}{c}\\vec{\\mathbf{j}} \\\\ \\nabla \\cdot \\vec{\\mathbf{E}} &amp; = 4 \\pi \\rho \\\\ \\nabla \\times \\vec{\\mathbf{E}}\\, +\\, \\frac1c\\, \\frac{\\partial\\vec{\\mathbf{B}}}{\\partial t} &amp; = \\vec{\\mathbf{0}} \\\\ \\nabla \\cdot \\vec{\\mathbf{B}} &amp; = 0 \\end{align}   In\u00a0[9]: Copied! <pre>import numpy as np\nimport pandas as pd\n</pre> import numpy as np import pandas as pd In\u00a0[10]: Copied! <pre>dates = pd.date_range('20130101', periods=6)\ndf = pd.DataFrame(np.random.randn(6, 4), index=dates, columns=list('ABCD'))\ndf\n</pre> dates = pd.date_range('20130101', periods=6) df = pd.DataFrame(np.random.randn(6, 4), index=dates, columns=list('ABCD')) df Out[10]: A B C D 2013-01-01 0.064687 -1.064990 -0.081865 0.430260 2013-01-02 -0.388568 -0.974757 -0.477194 2.163054 2013-01-03 0.549508 -1.315100 3.105967 1.957135 2013-01-04 -0.368952 -0.430743 -1.197150 -0.730688 2013-01-05 -0.323770 -1.294550 0.627769 1.036026 2013-01-06 0.625761 -0.384097 -1.924062 -0.058176 In\u00a0[11]: Copied! <pre>import matplotlib.pyplot as plt\n</pre> import matplotlib.pyplot as plt In\u00a0[12]: Copied! <pre>from pylab import *\n</pre> from pylab import * In\u00a0[13]: Copied! <pre>x = linspace(0, 5, 10)\ny = x ** 2\n</pre> x = linspace(0, 5, 10) y = x ** 2 In\u00a0[14]: Copied! <pre>figure()\nplot(x, y, 'r')\nxlabel('x')\nylabel('y')\ntitle('title')\nshow()\n</pre> figure() plot(x, y, 'r') xlabel('x') ylabel('y') title('title') show() In\u00a0[15]: Copied! <pre>num_points = 130\ny = np.random.random(num_points)\nplt.plot(y)\n</pre> num_points = 130 y = np.random.random(num_points) plt.plot(y) Out[15]: <pre>[&lt;matplotlib.lines.Line2D at 0x115fb9220&gt;]</pre> <p>This is some text, here comes some latex</p> In\u00a0[16]: Copied! <pre>from bokeh.plotting import figure, output_notebook, show\n</pre> from bokeh.plotting import figure, output_notebook, show In\u00a0[17]: Copied! <pre>output_notebook()\n</pre> output_notebook() Loading BokehJS ... In\u00a0[18]: Copied! <pre>p = figure()\np.line([1, 2, 3, 4, 5], [6, 7, 2, 4, 5], line_width=2)\nshow(p)\n</pre> p = figure() p.line([1, 2, 3, 4, 5], [6, 7, 2, 4, 5], line_width=2) show(p) In\u00a0[19]: Copied! <pre>import plotly.express as px\n</pre> import plotly.express as px In\u00a0[20]: Copied! <pre>df = px.data.iris()\nfig = px.scatter(df, x=\"sepal_width\", y=\"sepal_length\")\nfig.show()\n</pre> df = px.data.iris() fig = px.scatter(df, x=\"sepal_width\", y=\"sepal_length\") fig.show() In\u00a0[21]: Copied! <pre>import ipywidgets as widgets\n</pre> import ipywidgets as widgets  In\u00a0[22]: Copied! <pre>widget = widgets.IntSlider(\n    value=7,\n    min=0,\n    max=10,\n    step=1,\n    description='',\n    disabled=False,\n    continuous_update=False,\n    orientation='horizontal',\n    readout=True,\n    readout_format='d'\n)\n\nvalue_lbl = widgets.Label()\nwidgets.jslink((widget, 'value'), (value_lbl, 'value'))\n\ndisplay(widget, widgets.HBox([widgets.Label(\"Current Value:\"), value_lbl]) )\n</pre> widget = widgets.IntSlider(     value=7,     min=0,     max=10,     step=1,     description='',     disabled=False,     continuous_update=False,     orientation='horizontal',     readout=True,     readout_format='d' )  value_lbl = widgets.Label() widgets.jslink((widget, 'value'), (value_lbl, 'value'))  display(widget, widgets.HBox([widgets.Label(\"Current Value:\"), value_lbl]) )"},{"location":"blog/demo-nb/#jupyter-notebook-with-cells","title":"Jupyter Notebook with cells\u00b6","text":"<p>Text can be bold, italic, or strikethrough. Links should be blue with no underlines (unless hovered over).</p>"},{"location":"blog/demo-nb/#code-cells","title":"Code cells\u00b6","text":"<p>This first code cells have some tags</p>"},{"location":"blog/demo-nb/#equations","title":"Equations\u00b6","text":""},{"location":"blog/demo-nb/#pandas-dataframes","title":"Pandas DataFrames\u00b6","text":""},{"location":"blog/demo-nb/#plots","title":"Plots\u00b6","text":""},{"location":"blog/demo-nb/#bokeh","title":"bokeh\u00b6","text":""},{"location":"blog/demo-nb/#plotly","title":"plotly\u00b6","text":"<p>This requires a theme modification to include Require.JS</p>"},{"location":"blog/demo-nb/#widgets","title":"Widgets\u00b6","text":""},{"location":"blog/firstpost/","title":"My first blog post","text":"<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque nec maximus ex. Sed consequat, nulla quis malesuada dapibus, elit metus vehicula erat, ut egestas tellus eros at risus. In hac habitasse platea dictumst. Phasellus id lacus pulvinar erat consequat pretium. Morbi malesuada arcu mauris Nam vel justo sem. Nam placerat purus non varius luctus. Integer pretium leo in sem rhoncus, quis gravida orci mollis. Proin id aliquam est. Vivamus in nunc ac metus tristique pellentesque. Suspendisse viverra urna in accumsan aliquet.</p> <p>Donec volutpat, elit ac volutpat laoreet, turpis dolor semper nibh, et dictum massa ex pulvinar elit. Curabitur commodo sit amet dolor sed mattis. Etiam tempor odio eu nisi gravida cursus. Maecenas ante enim, fermentum sit amet molestie nec, mollis ac libero. Vivamus sagittis suscipit eros ut luctus.</p> <p>Nunc vehicula sagittis condimentum. Cras facilisis bibendum lorem et feugiat. In auctor accumsan ligula, at consectetur erat commodo quis. Morbi ac nunc pharetra, pellentesque risus in, consectetur urna. Nulla id enim facilisis arcu tincidunt pulvinar. Vestibulum laoreet risus scelerisque porta congue. In velit purus, dictum quis neque nec, molestie viverra risus. Nam pellentesque tellus id elit ultricies, vel finibus erat cursus.</p>"},{"location":"blog/secondpost/","title":"A second post","text":"<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque nec maximus ex. Sed consequat, nulla quis malesuada dapibus, elit metus vehicula erat, ut egestas tellus eros at risus. In hac habitasse platea dictumst. Phasellus id lacus pulvinar erat consequat pretium. Morbi malesuada arcu mauris Nam vel justo sem. Nam placerat purus non varius luctus. Integer pretium leo in sem rhoncus, quis gravida orci mollis. Proin id aliquam est. Vivamus in nunc ac metus tristique pellentesque. Suspendisse viverra urna in accumsan aliquet.</p> <p>Donec volutpat, elit ac volutpat laoreet, turpis dolor semper nibh, et dictum massa ex pulvinar elit. Curabitur commodo sit amet dolor sed mattis. Etiam tempor odio eu nisi gravida cursus. Maecenas ante enim, fermentum sit amet molestie nec, mollis ac libero. Vivamus sagittis suscipit eros ut luctus.</p> <p>Nunc vehicula sagittis condimentum. Cras facilisis bibendum lorem et feugiat. In auctor accumsan ligula, at consectetur erat commodo quis. Morbi ac nunc pharetra, pellentesque risus in, consectetur urna. Nulla id enim facilisis arcu tincidunt pulvinar. Vestibulum laoreet risus scelerisque porta congue. In velit purus, dictum quis neque nec, molestie viverra risus. Nam pellentesque tellus id elit ultricies, vel finibus erat cursus.</p>"},{"location":"python/","title":"Index","text":""},{"location":"python/#welcome-to-the-all-things-python","title":"Welcome to the All things Python !","text":"<p>01 Getting Started with Python:</p> 01 First - Getting Started with Python <p>Language Background Links to key Resources</p> <p>02 Environment Setup:</p> Details of Environment Setup <p>We can use Google Colab or setup a local environment.  Use an IDE like Visual Studio or AI based IDE like Cursor or Replit</p>"}]}